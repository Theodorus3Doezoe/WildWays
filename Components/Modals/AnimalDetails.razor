@using BlazorMetTailwind.Data

<div class="fixed inset-0 bg-black/60 z-40"></div>

<div class="fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 p-6 rounded-lg shadow-lg z-50 bg-[#1c2620] w-full max-w-md text-white">
    <h1 class="text-2xl font-bold mb-1">Details van @Dier.Naam</h1>
    <p class="text-gray-400 mb-4">Volledige informatie over dit dier.</p>

    <div class="space-y-3">
        <div class="flex justify-between">
            <span class="text-gray-400">Locatie:</span>
            <span class="font-medium">@Dier.Locatie</span>
        </div>
        <div class="flex justify-between">
            <span class="text-gray-400">Grootte:</span>
            <span class="font-medium">@Dier.Grootte</span>
        </div>
        <div class="flex justify-between">
            <span class="text-gray-400">Dieet:</span>
            <span class="font-medium">@Dier.Dieet</span>
        </div>
        <div class="flex justify-between">
            <span class="text-gray-400">Geboortedatum:</span>
            <span class="font-medium">@Dier.Geboortedatum?.ToShortDateString()</span>   
        </div>
        <div class="flex justify-between">
            <span class="text-gray-400">Geslacht:</span>
            <span class="font-medium">@Dier.Geslacht</span>
        </div>
        <div class="flex justify-between">
            <span class="text-gray-400">Aangemaakt op:</span>
            <span class="font-medium">@Dier.AanmaakDatum.ToString("dd-MM-yyyy")</span>
        </div>
    </div>

    <div class="flex justify-end mt-6 gap-4">
        <button @onclick="VerwijderDier" class="px-4 py-2 bg-red-600 hover:bg-red-500 rounded-md font-semibold cursor-pointer">Verwijderen</button>
        <button @onclick="Close" class="px-4 py-2 bg-gray-600 hover:bg-gray-500 rounded-md font-semibold cursor-pointer">Sluiten</button>
    </div>
</div>

@code {
    [Parameter]
    public Dier Dier { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback<Dier> OnDelete { get; set; }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }

    private async Task VerwijderDier()
    {
        await OnDelete.InvokeAsync(Dier);
    }
}