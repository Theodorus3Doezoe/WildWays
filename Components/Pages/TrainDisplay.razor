@page "/wagon"
@using BlazorMetTailwind.Models
@using BlazorMetTailwind.Services
@inject AnimalService AnimalService
@inject WagonService WagonService

<PageTitle>Wagon Indeling</PageTitle>

<div class="bg-black text-white p-6 h-screen">
    <h1 class="text-2xl font-bold mb-4">Trein Indeling</h1>

    @if (wagons == null || !wagons.Any())
    {
        <p class="text-gray-400">Er zijn geen dieren om in te delen of alle wagons zijn leeg.</p>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @for (int i = 0; i < wagons.Count; i++)
            {
                var wagon = wagons[i];
                var wagonNummer = i + 1;
                
                var wagonBgColor = wagon.IsExperimental ? "bg-[#2a203d]" : "bg-[#1c2620]";
                var headerTextColor = wagon.IsExperimental ? "text-purple-300" : "text-white";
                var itemBgColor = wagon.IsExperimental ? "bg-[#4a3d5f]" : "bg-[#2a3b31]";

                <div class="@wagonBgColor p-4 rounded-lg shadow-lg">
                    <div class="flex justify-between items-center mb-3">
                        <h2 class="text-xl font-semibold @headerTextColor">
                            Wagon @wagonNummer 
                            @if (wagon.IsExperimental)
                            {
                                <span class="text-sm font-normal align-middle">(Experimenteel)</span>
                            }
                        </h2>
                        
                        @if (!wagon.IsExperimental)
                        {
                            <span class="text-sm font-mono bg-gray-700 px-2 py-1 rounded">@wagon.HuidigeCapaciteit / 10</span>
                        }
                    </div>
                    
                    @if (!wagon.Dieren.Any())
                    {
                        <p class="text-gray-500">Deze wagon is leeg.</p>
                    }
                    else
                    {
                        <ul class="space-y-2">
                            @foreach (var dier in wagon.Dieren)
                            {
                                <li class="flex items-center gap-3 p-2 @itemBgColor rounded">
                                    <span class="font-medium text-lg">@dier.Naam</span>
                                    <span class="text-xs text-gray-400">(@dier.Grootte, @dier.Dieet)</span>
                                </li>
                            }
                        </ul>
                    }
                </div>
            }
        </div>
    }
</div>


@code {
    private List<Wagon> wagons;

    protected override void OnInitialized()
    {
        // 1. Haal de lijst van dieren op
        var alleDieren = AnimalService.GetDieren();

        // 2. Gebruik de WagonService om de dieren in wagons te delen
        wagons = WagonService.DeelDierenIn(alleDieren);
    }
}